{"extracted_information": "The article discusses the implementation of design systems in React Native, highlighting their benefits for consistency, time-saving, and error reduction. A perfect design system includes typography, color themes, layouts, and designed components. For implementation, Netguru shares tools and best practices. Styled-components are used as the main styling pattern to keep computations within custom styled-components for better structure and readability. Component architecture involves building well-tested, reusable components, often showcased and documented via tools like Storybook and example apps. Challenges include managing third-party packages, visual regression testing (relying on Jest snapshots due to Loki limitations), and performance issues with complex components like charts when handling large data.", "specifications": {}, "pricing": {}, "features": [{"name": "Storybook", "type": "UI Development Environment", "description": "A user interface development environment and playground for UI components. Enables developers to create components independently and showcase them interactively in an isolated development environment, running outside the main app."}, {"name": "Zeplin", "type": "Collaboration App", "description": "A collaboration app for designers and engineers that helps simplify the handoff process by generating style guides, specs, and assets automatically. Used to \"transpile\" designs to React Native code."}, {"name": "IcoMoon", "type": "Icon Library", "description": "An icon library that lets users build and use their own icon packs. Used for managing implementation of designs with dozens of custom icons, offering a faster alternative to `react-native-svg` for icon sets."}, {"name": "Jest", "type": "Testing Framework", "description": "A testing framework for React Native applications, used to test each componentâ€™s behavior for well-tested, bug-free code. Also used for snapshots in place of visual regression tests like Loki."}, {"name": "Styled-components", "type": "Styling Pattern", "description": "Allows users to write CSS styles and transpile them to React Native styles. Chosen as the main styling pattern; enables keeping computations inside custom styled-components for structured and readable code."}, {"name": "Patch-package", "type": "Dependency Management Tool", "description": "Lets app authors instantly make fixes to npm dependencies. Used to change source code of dependencies to meet custom requirements when components required specific behavior not covered by their overall scope."}, {"name": "React-native-shadow", "type": "NPM Package", "description": "Lets users implement custom shadows on Android, addressing React Native's limitation of only handling black shadows via the 'Elevation' prop on Android. Provides custom shadow color, size, and opacity control."}, {"name": "React-native-svg", "type": "NPM Package", "description": "Lets users use SVGs in React Native applications. Used for implementing custom vectors like circles, lines, and squares required by the design system."}], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": ["https://storybook.js.org/", "https://zeplin.io/", "https://icomoon.io/", "https://jestjs.io/", "https://www.styled-components.com/", "https://www.npmjs.com/package/patch-package", "https://github.com/oblador/loki", "https://github.com/FormidableLabs/victory-native", "/services/design-systems", "/services/web-development", "/services/mobile-development/react-native-development", "/glossary/react-native", "/services/mobile-development", "/featured/hive-a-secret-child-of-asana-and-trello", "/featured/shepper-physical-assets-checks", "/blog/what-is-a-design-system", "https://www.netguru.com/cs/c/?cta_guid=8016a077-cfff-4135-bab9-019e7b8bc66b&signature=AAH58kGdntFvaTa2K6gbmvbwDQjCm_003Q&portal_id=493098&pageId=10221482607&placement_guid=a7dd516c-8550-4a0c-9cb1-590576eca81&click=a23afddb-84f2-438c-8016-974552922f8f&redirect_url=APefjpE7uw8G0HLUOa2zvTbyY67wFzkzf33dxlWDQ1DjDf0HyInx2bMN7cxDbLE6XSH2jtoZV39zuUcobA_c0tInBcvmgV2ulXZ6gRX1UhARrOPdgQfVssv7ROPEVdmMWcT6oJsG7pLUAINx333pkG0yRrpiivdaXg&hsutk=&canon=https%3A%2F%2Fwww.netguru.com%2Fblog%2Fdesign-systems-in-react-native&ts=1755402922982", "https://www.netguru.com/blog/react-vs-react-native", "https://www.netguru.com/blog/mobile-app-development-trends", "https://www.netguru.com/blog/cross-platform-mobile-apps-development", "https://www.netguru.com/blog/flutter-vs-react-native", "https://www.netguru.com/blog/react-native-performance", "https://www.netguru.com/blog/xamarin-vs-react-native"]}