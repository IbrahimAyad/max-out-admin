{"extracted_information": "The provided content details current best practices and configurations for using TypeScript with React Native, which are expected to remain relevant in 2025. New React Native projects, including those created via CLI, Ignite, or Expo, default to TypeScript. For existing JavaScript projects, TypeScript can be added by installing necessary packages (`typescript`, `@react-native/typescript-config`, `@types/jest`, `@types/react`, `@types/react-test-renderer`), creating a `tsconfig.json` file that extends `@react-native/typescript-config`, and renaming JavaScript files to `.tsx` (while keeping `index.js` as the entrypoint). TypeScript sources are transformed by Babel during bundling, with `tsc` recommended solely for type-checking. A key pattern involves defining interfaces for React Component `Props` and `State` (e.g., `export type Props = { name: string; ... }`) for enhanced type-checking and editor auto-completion. Custom path aliases are supported by configuring both `tsconfig.json` (using `baseUrl` and `paths`) and `babel.config.js` (using `babel-plugin-module-resolver` for root, extensions, and aliases), ensuring consistent module resolution. Official documentation and community cheatsheets are referenced for further guidance.", "specifications": {"default_for_new_projects": true, "installation_packages": ["typescript", "@react-native/typescript-config", "@types/jest", "@types/react", "@types/react-test-renderer"], "tsconfig_base_configuration": {"extends": "@react-native/typescript-config"}, "custom_path_aliases_config": {"tsconfig.json_example": {"compilerOptions": {"baseUrl": ".", "paths": {"*": ["src/*"], "tests": ["tests/*"], "@components/*": ["src/components/*"]}}}, "babel_plugin": "babel-plugin-module-resolver", "babel.config.js_example": {"presets": ["module:metro-react-native-babel-preset"], "plugins": [["module-resolver", {"root": ["./src"], "extensions": [".ios.js", ".android.js", ".js", ".ts", ".tsx", ".json"], "alias": {"tests": "./tests/", "@components": "./src/components"}}]]}}, "type_checking_command": "npx tsc"}, "pricing": {}, "features": ["Type definitions for JavaScript", "Default for new React Native projects", "Supports existing JavaScript projects conversion", "Babel transformation during bundling", "Recommended usage of `tsc` for type-checking only", "Type-checking for React Component Props and State", "Editor auto-completion for types", "Support for custom path aliases"], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [{"name": "TypeScript Handbook", "url": "https://www.typescriptlang.org/docs/handbook/intro.html"}, {"name": "React's documentation on TypeScript", "url": "https://react.dev/learn/typescript"}, {"name": "React + TypeScript Cheatsheets", "url": "https://github.com/typescript-cheatsheets/react-typescript-cheatsheet#reacttypescript-cheatsheets"}, {"name": "Babel Plugin Transform TypeScript Caveats", "url": "https://babeljs.io/docs/en/next/babel-plugin-transform-typescript"}, {"name": "TypeScript Module Resolution Path Mapping", "url": "https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping"}]}